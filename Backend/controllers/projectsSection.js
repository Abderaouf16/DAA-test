import Project from "../models/projects.js";
import User from "../models/User.js";
import mongoose from "mongoose";
import fs from "fs";
import { fileURLToPath } from "url";
import path from "path";

// create projects
export const createProject = async (req, res) => {
  try {
    const { postedBy, description, ProjectName, posterName } = req.body;
    const newProject = new Project({
      postedBy,
      ProjectName: ProjectName,
      description: description,
      posterName,
      imageURL: `/images/${req.file.filename}`,
      //req.file.filename is generated by multer
      // when the new project is saved to the database imageURL property is also saved along with the other project details.
    });
    console.log(newProject);
    await newProject.save();

    const project = await Project.find();
    console.log(project);
    res.status(201).json(project);
  } catch (err) {
    res.status(409).json({ message: err.message });
  }
  try {
    // ...
  } catch (error) {
    if (error.response.status === 409) {
      alert("A project with this name or image already exists");
    } else {
      console.error(error);
      alert("Error adding project");
    }
  }
};

/* READ  */
export const getProjects = async (req, res) => {
  try {
    const post = await Project.find().sort({ createdAt: -1 });
    res.status(200).json(post);
  } catch (err) {
    res.status(404).json({ message: err.message });
  }
};

// fetch projects by user (postedBy)
export const getProjectsByUser = async (req, res) => {
  const { postedBy } = req.params;
  try {
    const projects = await Project.find({ postedBy }).sort({ createdAt: -1 });
    if (!projects || projects.length === 0) {
      return res
        .status(404)
        .json({ error: "No project posted by this user yet!" });
    }
    res.status(200).json(projects);
  } catch (error) {
    res.status(400).json(error);
  }
};

//delete product
export const deleteProject = async (req, res) => {
  const { id } = req.params;
  console.log("project", id);
  try {
    if (!Project) {
      return res.status(404).json({ error: "Project not found!" });
    }

    await Project.deleteOne({ _id: id });

    res
      .status(200)
      .json({ message: "Product deleted successfully!", data: Project });
  } catch (error) {
    res.status(400).json({ message: error.message });
  }
};

// update a project by id
export const updateProject = async (req, res) => {
  const { id } = req.params;

  const updates = req.body;
  const __filename = fileURLToPath(import.meta.url);
  const __dirname = path.dirname(__filename);

  try {
    const project = await Project.findById(id);

    if (!project) {
      return res.status(404).json({ error: "Project not found" });
    }


    if (req.file) {
      project.imageURL = `/images/${req.file.filename}`;
    }

    Object.assign(project, updates);

    const updatedProject = await project.save();

    res.status(200).json(updatedProject);
  } catch (error) {
    res.status(500).json({ error: error.message });
    console.log(error);
  }
};

//Read on Project by it's ID
export const getProject = async (req, res) => {
  const { id } = req.params;

  try {
    const project = await Project.findById(id);

    if (!project) {
      return res.status(404).json({ error: "Project not found!" });
    }

    res.status(200).json(project);
  } catch (error) {
    res.status(400).json({ message: "Error finding Project!" });
  }
};
